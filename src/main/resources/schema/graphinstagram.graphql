scalar DateTime

type Query {
    me: Member!
    getPost(postId: ID!): Post!
    myPostList(postPageInput: PostPageInput!): [Post!]
    myLikedPostList: [Post!]
    shows(titleFilter: String): [Show]
    posts(postPageInput: PostPageInput!): [Post!]
    likedMembersToPost(postId: ID!): [Member!]
    myFollowers: [Member!]
    myFollowees: [Member!]
    getPostsByHashtag(tag_name: String!, postPageInput: PostPageInput!): [Post!]
}

type Mutation {
    memberRegister(memberRegisterInput: MemberRegisterInput!): Boolean!
    memberLogin(memberLoginInput: MemberLoginInput!): MemberLoginResponse!
    postCreate(createPostInput: CreatePostInput!): Boolean!
    postUpdate(updatePostInput: UpdatePostInput!): Boolean!
    postDelete(postId: ID!): Boolean!
    postLike(likePostInput: LikePostInput!): Boolean!
    postLikeCancel(likeCancelPostInput: LikeCancelPostInput): Boolean!
    follow(followeeId: ID!): Boolean!
    unFollow(followeeId: ID!): Boolean!
}

# example
type Show {
    id: Int!
    title(format: TitleFormat): String!
    releaseYear: Int
    reviews: [Review]
    artwork: [Image]
}

input TitleFormat {
    uppercase: Boolean
}

type Review {
    username: String
    starScore: Int
    submittedDate: DateTime
}

type Image {
    url: String
}